// <auto-generated>
//     Arquivo gerado automaticamente por ferramentas do .NET.
//     Este arquivo cont√©m os acessores fortemente tipados para o arquivo Messages.resx.
// </auto-generated>

using System;
using System.Reflection;
using System.Resources;
using System.Globalization;

namespace Chronosystem.Application.Resources
{
    /// <summary>
    /// Classe est√°tica que exp√µe acessores fortemente tipados para mensagens multil√≠ngues.
    /// </summary>
    /// <remarks>
    /// As chaves s√£o resolvidas dinamicamente a partir dos arquivos .resx localizados
    /// em <c>Chronosystem.Application.Resources</c>.
    /// </remarks>
    public static class Messages
    {
        // Nota: typeof(Messages).Assembly √© mais robusto que GetExecutingAssembly()
        // pois sempre resolve o assembly onde esta classe est√° definida.
        private static readonly ResourceManager resourceManager =
            new ResourceManager("Chronosystem.Application.Resources.Messages", typeof(Messages).Assembly);

        /// <summary>
        /// Retorna o valor localizado de uma chave de recurso.
        /// </summary>
        public static string Get(string name) =>
            resourceManager.GetString(name, CultureInfo.CurrentUICulture) ?? $"[[{name}]]";

        // =====================================================================
        // üåç GLOBAL
        // =====================================================================
        public static string Validation_RequiredField => Get(nameof(Validation_RequiredField));
        public static string Validation_MinLength => Get(nameof(Validation_MinLength));
        public static string Validation_MaxLength => Get(nameof(Validation_MaxLength));
        public static string Validation_InvalidFormat => Get(nameof(Validation_InvalidFormat));
        public static string Validation_UserId_Required => Get(nameof(Validation_UserId_Required));
        public static string Validation_Id_Mismatch => Get(nameof(Validation_Id_Mismatch));
        public static string Validation_Request_Invalid => Get(nameof(Validation_Request_Invalid));

        // =====================================================================
        // üè¢ UNITS
        // =====================================================================
        public static string Unit_Id_Required => Get(nameof(Unit_Id_Required));
        public static string Audit_Actor_Required => Get(nameof(Audit_Actor_Required));
        public static string Unit_Name_Required => Get(nameof(Unit_Name_Required));
        public static string Unit_Name_MinLength => Get(nameof(Unit_Name_MinLength));
        public static string Unit_Name_MaxLength => Get(nameof(Unit_Name_MaxLength));
        public static string Unit_Name_AlreadyExists => Get(nameof(Unit_Name_AlreadyExists));
        public static string Unit_NotFound => Get(nameof(Unit_NotFound));
        public static string Unit_List_Empty => Get(nameof(Unit_List_Empty));

        // =====================================================================
        // üë§ USERS
        // =====================================================================
        public static string User_Email_AlreadyExists => Get(nameof(User_Email_AlreadyExists));
        public static string User_NotFound => Get(nameof(User_NotFound));
        public static string User_Password_Required => Get(nameof(User_Password_Required));
        public static string User_Email_Required => Get(nameof(User_Email_Required));
        public static string User_Email_Invalid => Get(nameof(User_Email_Invalid));
        public static string User_Inactive => Get(nameof(User_Inactive));
        public static string User_Password_Invalid => Get(nameof(User_Password_Invalid));
        public static string User_Role_Invalid => Get(nameof(User_Role_Invalid));

        // =====================================================================
        // üè¢ TENANTS
        // =====================================================================
        public static string Tenant_Subdomain_Invalid => Get(nameof(Tenant_Subdomain_Invalid));
        public static string Tenant_Subdomain_AlreadyExists => Get(nameof(Tenant_Subdomain_AlreadyExists));
        public static string Tenant_Header_Required => Get(nameof(Tenant_Header_Required));
        public static string Tenant_Header_InvalidFormat => Get(nameof(Tenant_Header_InvalidFormat));
        public static string Tenant_Header_MissingClaim => Get(nameof(Tenant_Header_MissingClaim));
        public static string Tenant_Header_Mismatch => Get(nameof(Tenant_Header_Mismatch));

        // =====================================================================
        // üîê AUTH
        // =====================================================================
        public static string Auth_SignUp_Success => Get(nameof(Auth_SignUp_Success));
        public static string Auth_Refresh_InvalidOrExpired => Get(nameof(Auth_Refresh_InvalidOrExpired));
    }
}
