// <auto-generated>
//     Arquivo gerado automaticamente por ferramentas do .NET.
//     Este arquivo contém os acessores fortemente tipados para o arquivo Messages.resx.
// </auto-generated>

using System;
using System.Reflection;
using System.Resources;
using System.Globalization;

namespace Chronosystem.Application.Resources
{
    public static class Messages
    {
        private static readonly ResourceManager resourceManager =
            new ResourceManager("Chronosystem.Application.Resources.Messages", Assembly.GetExecutingAssembly());

        public static string Get(string name) =>
            resourceManager.GetString(name, CultureInfo.CurrentUICulture) ?? $"[[{name}]]";

        // ============= GLOBAL =============
        public static string Validation_RequiredField => Get(nameof(Validation_RequiredField));
        public static string Validation_MinLength => Get(nameof(Validation_MinLength));
        public static string Validation_MaxLength => Get(nameof(Validation_MaxLength));
        public static string Validation_InvalidFormat => Get(nameof(Validation_InvalidFormat));
        public static string Validation_UserId_Required => Get(nameof(Validation_UserId_Required));
        public static string Validation_Id_Mismatch => Get(nameof(Validation_Id_Mismatch)); // ✅ NOVA CHAVE

        // ============= UNITS =============
        public static string Unit_Id_Required => Get(nameof(Unit_Id_Required));
        public static string Unit_Name_Required => Get(nameof(Unit_Name_Required));
        public static string Unit_Name_MinLength => Get(nameof(Unit_Name_MinLength));
        public static string Unit_Name_MaxLength => Get(nameof(Unit_Name_MaxLength));
        public static string Unit_Name_AlreadyExists => Get(nameof(Unit_Name_AlreadyExists));
        public static string Unit_NotFound => Get(nameof(Unit_NotFound));
        public static string Unit_List_Empty => Get(nameof(Unit_List_Empty));

        // ============= USERS =============
        public static string User_Email_AlreadyExists => Get(nameof(User_Email_AlreadyExists));
        public static string User_NotFound => Get(nameof(User_NotFound));
        public static string User_Password_Required => Get(nameof(User_Password_Required));
        public static string User_Email_Required => Get(nameof(User_Email_Required));
        public static string User_Email_Invalid => Get(nameof(User_Email_Invalid));
    }
}
